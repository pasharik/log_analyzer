<configuration>
    <!-- Stop output INFO at start -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

    <appender name="CONSOLE_ERROR" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
            </Pattern>
        </layout>
    </appender>

    <appender name="LONG_EVENTS_FILE" class="ch.qos.logback.core.FileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <append>false</append>
		<file>long_events.txt</file>
		<encoder>
            <Pattern>%msg%n</Pattern>
		</encoder>
	</appender>

    <logger name="org.hibernate" level="error" additivity="false">
        <appender-ref ref="CONSOLE_ERROR"/>
    </logger>

    <logger name="ru.pasharik.LogAnalyzer" level="error" additivity="false">
        <appender-ref ref="CONSOLE_ERROR"/>
    </logger>

    <!--Writing long events to stdout and into text file-->
    <logger name="ru.pasharik.LogAnalyzer" level="info" additivity="false">
        <appender-ref ref="LONG_EVENTS_FILE"/>
    </logger>

    <root level="error">
        <appender-ref ref="CONSOLE_ERROR"/>
    </root>

</configuration>
